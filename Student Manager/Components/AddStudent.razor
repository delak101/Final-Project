@page "/addstudent"
@inject NavigationManager Navigator
@using AKSoftware.Blazor.Utilities

@if (IsFormVisible)
{
    <div class="alert alert-secondary" role="alert">
        <h2>Add Student</h2>
    </div>

    <EditForm Model="student" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        @* <ValidationSummary /> *@

        <div class="mb-3">
            <label for="InputStudentName" class="form-label">Name</label>
            <InputText @bind-Value="student.Name" type="text" class="form-control" id="InputStudentName" />
            <ValidationMessage For="() => student.Name" />
        </div>

        <div class="mb-3">
            <label for="InputStudentAge" class="form-label">Age</label>
            <InputNumber @bind-Value="student.Age" type="text" class="form-control" id="InputStudentAge" />
            <ValidationMessage For="() => student.Age" />
        </div>

        <div class="mb-3">
            <label for="InputStudentAddress" class="form-label">Address</label>
            <InputText @bind-Value="student.Address" type="text" class="form-control" id="InputStudentAddress" />
            <ValidationMessage For="() => student.Address" />
        </div>

        <div class="d-flex justify-content-center mt-3">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    </EditForm>
}
else
{
    <AddedSuccessfully Name="@studentName" />
}

@code {
    Student student = new();
    ManagerContext db = new ManagerContext();

    bool IsFormVisible = true;
    string studentName = string.Empty;

    protected override Task OnInitializedAsync()
    {
        MessagingCenter.Subscribe<AddedSuccessfully>(this, "ShowFormMsg", (sender) =>
        {
            IsFormVisible = true;
            InvokeAsync(() => StateHasChanged());
        });
        return base.OnInitializedAsync();
    }

    void OnValidSubmit()
    {
        db.Students.Add(student);
        db.SaveChanges();
        if(student.Id != 0)
        {
            studentName = student.Name;
            Navigator.NavigateTo("/students");
            student = new Student();
        }
    }
}
