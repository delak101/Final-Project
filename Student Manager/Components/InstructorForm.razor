@page "/instructors"
@using Microsoft.EntityFrameworkCore

<h3>Add Instructor</h3>
<form @onsubmit="AddInstructor">
    <div>
        <input type="text" @bind="newInstructorName" placeholder="Instructor Name" />
    </div>
    <div>
        <select @bind="selectedCourseId">
            <option value="">Select a Course</option>
            @foreach (var course in courses)
            {
                <option value="@course.Id">@course.Name</option>
            }
        </select>
    </div>
    <button type="submit">Add Instructor</button>
</form>

@if (instructors == null || courses == null)
{
    <p>Loading...</p>
}
else
{
    <h3>Instructor List</h3>
    <ul>
        @foreach (var instructor in instructors)
        {
            <li>@instructor.Name (Course: @instructor.Course?.Name)</li>
        }
    </ul>
}

@code {
    private string newInstructorName;
    private int selectedCourseId;
    private List<Instructor> instructors;
    private List<Course> courses;
    ManagerContext db = new();

    protected override async Task OnInitializedAsync()
    {
        // Load instructors and courses from the database
        instructors = await db.Instructors.Include(i => i.Course).ToListAsync();
        courses = await db.Courses.ToListAsync();
    }

    private async Task AddInstructor()
    {
        if (!string.IsNullOrWhiteSpace(newInstructorName) && selectedCourseId != 0)
        {
            var instructor = new Instructor { Name = newInstructorName, CourseId = selectedCourseId };
            db.Instructors.Add(instructor);
            await db.SaveChangesAsync();
            instructors.Add(instructor); // Update the list
            newInstructorName = string.Empty; // Reset the input
            selectedCourseId = 0; // Reset the dropdown
        }
    }
}
