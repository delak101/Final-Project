@page "/addinstructor"
@inject NavigationManager Navigator
@using AKSoftware.Blazor.Utilities

@if (IsFormVisible)
{
    <div class="alert alert-secondary" role="alert">
        <h2>Add Instructor</h2>
    </div>

    <EditForm Model="instructor" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="InputInstructorName" class="form-label">Name</label>
            <InputText @bind-Value="instructor.Name" type="text" class="form-control" id="InputInstructorName" />
            <ValidationMessage For="() => instructor.Name" />
        </div>

        <div class="mb-3">
            <label for="CourseSelect" class="form-label">Select Course: </label>
            <InputSelect @bind-Value="instructor.CourseId" class="form-control" id="CourseSelect">
                @foreach (var course in courses)
                {
                    <option value="@course.Id">@course.Name</option>
                }
            </InputSelect>
            <ValidationMessage For="() => instructor.CourseId" />
        </div>

        <div class="d-flex justify-content-center mt-3">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    </EditForm>
}
else
{
    <AddedSuccessfully Name="@instructorName" />
}

@code {
    Instructor instructor = new();
    List<Course> courses = new();
    ManagerContext db = new ManagerContext();

    bool IsFormVisible = true;
    string instructorName;

    protected override Task OnInitializedAsync()
    {
        courses = db.Courses.ToList();
        MessagingCenter.Subscribe<AddedSuccessfully>(this, "ShowFormMsg", (sender) =>
        {
            IsFormVisible = true;
            InvokeAsync(() => StateHasChanged());
        });
        return base.OnInitializedAsync();
    }

    void OnValidSubmit()
    {
        db.Instructors.Add(instructor);
        db.SaveChanges();
        if (instructor.Id != 0)
        {
            instructorName = instructor.Name;
            Navigator.NavigateTo("/instructors");
            instructor = new Instructor();
        }
    }
}
