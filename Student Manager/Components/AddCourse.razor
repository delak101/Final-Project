@page "/addcourse"
@inject NavigationManager Navigator
@using AKSoftware.Blazor.Utilities

@if (IsFormVisible)
{
    <div class="alert alert-secondary" role="alert">
        <h3>Add Course</h3>
    </div>

    <EditForm Model="newCourse" OnValidSubmit="HandleValidSubmit">
        @* <DataAnnotationsValidator /> *@
        <div class="mb-3">
            <label for="InputCourseName" class="form-label">Course Name</label>
            <InputText @bind-Value="newCourse.Name" type="text" class="form-control" id="InputCourseName" />
            @* <ValidationMessage For="() => newCourse.Name" /> *@
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
}
else
{
    <AddedSuccessfully Name="@courseName" />
}
@code {
    Course newCourse = new();
    ManagerContext db = new ManagerContext();

    bool IsFormVisible = true;
    string courseName = string.Empty;

    protected override Task OnInitializedAsync()
    {
        MessagingCenter.Subscribe<AddedSuccessfully>(this, "ShowFormMsg", (sender) =>
        {
            IsFormVisible = true;
            InvokeAsync(() => StateHasChanged());
        });
        return base.OnInitializedAsync();
    }
    private async Task HandleValidSubmit()
    {
        db.Courses.Add(newCourse);
        await db.SaveChangesAsync();
        if (newCourse.Id != 0)
        {
            courseName = newCourse.Name;
            MessagingCenter.Send(this, "CourseAdded", newCourse);
            Navigator.NavigateTo("/courses");
            newCourse = new Course();
            IsFormVisible = false;
        }
    }
}